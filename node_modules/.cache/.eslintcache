[{"C:\\Xavier\\karbox - Copy\\iot\\src\\index.js":"1","C:\\Xavier\\karbox - Copy\\iot\\src\\App.js":"2","C:\\Xavier\\karbox - Copy\\iot\\src\\responsive.js":"3","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\Login.jsx":"4","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\Register.jsx":"5","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\VerifyOTP.jsx":"6","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\otp.jsx":"7","C:\\Xavier\\karbox - Copy\\iot\\src\\context\\context.js":"8","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\Home.jsx":"9","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\ResetPassword.jsx":"10","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\UsersList.jsx":"11","C:\\Xavier\\karbox - Copy\\iot\\src\\helpers.js":"12","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\ResetPasswordOtp.jsx":"13","C:\\Xavier\\karbox - Copy\\iot\\src\\api_endPoint.js":"14","C:\\Xavier\\karbox - Copy\\iot\\src\\alerts.js":"15"},{"size":296,"mtime":1704025894800,"results":"16","hashOfConfig":"17"},{"size":2591,"mtime":1705584165820,"results":"18","hashOfConfig":"17"},{"size":2021,"mtime":1704643002048,"results":"19","hashOfConfig":"17"},{"size":9416,"mtime":1706078045843,"results":"20","hashOfConfig":"17"},{"size":9674,"mtime":1706078057038,"results":"21","hashOfConfig":"17"},{"size":6992,"mtime":1706078148400,"results":"22","hashOfConfig":"17"},{"size":1102,"mtime":1703611039017,"results":"23","hashOfConfig":"17"},{"size":233,"mtime":1703878324634,"results":"24","hashOfConfig":"17"},{"size":17464,"mtime":1706468564809,"results":"25","hashOfConfig":"17"},{"size":12280,"mtime":1706112574225,"results":"26","hashOfConfig":"17"},{"size":23513,"mtime":1706468549392,"results":"27","hashOfConfig":"17"},{"size":218,"mtime":1705565612181,"results":"28","hashOfConfig":"17"},{"size":4108,"mtime":1706078074646,"results":"29","hashOfConfig":"17"},{"size":72,"mtime":1705586518732,"results":"30","hashOfConfig":"17"},{"size":812,"mtime":1705588512023,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"4mamqs",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"35"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Xavier\\karbox - Copy\\iot\\src\\index.js",[],[],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\App.js",["85","86","87","88"],[],"import \"./App.css\";\nimport Login from \"./Pages/Login\";\nimport Register from \"./Pages/Register\";\nimport { BrowserRouter, Routes, Route, useNavigate } from \"react-router-dom\";\nimport VerifyOTP from \"./Pages/VerifyOTP\";\nimport { UserContext, UserProvider } from \"./context/context\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Home from \"./Pages/Home\";\nimport ResetPassword from \"./Pages/ResetPassword\";\nimport { ToastContainer } from \"react-toastify\";\nimport UsersList from \"./Pages/UsersList\";\nimport axios from \"axios\";\nimport ResetPasswordOtp from \"./Pages/ResetPasswordOtp\";\n\n\nfunction App() {\n  const [user, setUser] = useState({\n    email: null,\n    accessToken: sessionStorage.getItem(\"accessToken\") || null,\n  });\n\n  const dispatchUserEvent = async (actionType, payload) => {\n    switch (actionType) {\n      case \"Register\":\n        setUser({\n          email: payload.email,\n        });\n        break;\n      case \"Login\":\n        setUser({\n          accessToken: payload.accessToken,\n        });\n      default:\n        break;\n        case \"LOGOUT\":\n          try {\n             await axios.post('logout',{},{\n              headers:{\n                Authorization:`Bearer ${sessionStorage.getItem(\"accessToken\")}`,\n                'Content-Type':\"application/json\"\n              }\n            })\n\n          } catch (error) {\n            console.log(error)\n          }\n          sessionStorage.removeItem(\"accessToken\")\n    }\n  };\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    // user.email ? navigate('/verify-otp'):navigate('/register')\n  }, [user]);\n\n  return (\n    <UserContext.Provider value={{ user, dispatchUserEvent }}>\n      {/* <BrowserRouter className=\"App\"> */}\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={true}\n        closeOnClick={true}\n        pauseOnFocusLoss={true}\n        draggable\n        pauseOnHover\n        theme=\"light\"\n        rtl={false}\n        fontSize=\"2px\"\n      />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/reset-password\" element={<ResetPassword />} />\n        <Route path=\"/users-list\" element={<UsersList />} />\n        <Route path=\"/otp-verification\" element={<VerifyOTP />} />\n        <Route path=\"/verify-reset-password-token\" element={<ResetPasswordOtp />} />\n      </Routes>\n      {/* </BrowserRouter> */}\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Xavier\\karbox - Copy\\iot\\src\\responsive.js",[],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\Login.jsx",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],[],"import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  RemoveRedEye,\r\n  VisibilityOff,\r\n} from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { tablet } from \"../responsive\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { tablet } from \"../responsive\";\r\nimport { ErrorAlert } from \"../alerts\";\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #dbeafe;\r\n  color: #3c3c3c;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 30%;\r\n  // height: 65%;\r\n  \r\n  ${tablet({ width: \"80%\" })};\r\n`;\r\nconst RegisterCon = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  padding: 25px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 15px -10px rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst RegisterTextCon = styled.div`\r\n  padding-bottom: 7px;\r\n`;\r\nconst RegisterText = styled.p`\r\n  font-weight: 600;\r\n  font-size: 25px;\r\n  // color:#4d5572;\r\n  // color:#3c3c3c;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  grid-template-columns: 1fr;\r\n  background: white;\r\n`;\r\nconst InputCon = styled.div`\r\n  background: white;\r\n`;\r\nconst Input = styled.input`\r\n  background: white;\r\n  width: 100%;\r\n  // height: 100%;\r\n  padding: 7px;\r\n  border: none;\r\n  outline: none;\r\n  border: 1px solid #eee;\r\n  border-radius: 6px;\r\n  box-sizing: border-box;\r\n\r\n  &:focus {\r\n    background: #eee;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst Inputlabel = styled.label`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  background: white !important;\r\n  margin: 7px 0;\r\n`;\r\nconst InputContainer = styled.div`\r\n  // border: 1px solid #eee;\r\n  flex: 1;\r\n  // padding: 0 30px;\r\n  // height: 60px;\r\n  color: grey;\r\n  position: relative;\r\n  border-radius:6px;\r\n  // margin: 20px 0;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background: #1e5eeb;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  margin: 25px 0;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n  background: #c5c5c5;\r\n  border: none;\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst SignUpOptions = styled.div``;\r\nconst SignUpOptionsHeader = styled.div`\r\n  padding: 7px 0;\r\n`;\r\nconst SignUpOptionsHeaderText = styled.span`\r\n  font-size: 11.6px;\r\n  font-weight: 600;\r\n  color: grey;\r\n`;\r\nconst SignUpOptionsButtonCon = styled.div`\r\n  gap: 20px;\r\n`;\r\nconst SignUpOptionsButton = styled.button`\r\n  background: #eee;\r\n  border-radius: 8px;\r\n  padding: 6px 30px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  border: none;\r\n`;\r\nconst SignUpOptionsIcon = styled.div`\r\n  margin-right: 7px;\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  padding: 8px 0;\r\n  width:100%;\r\n`;\r\nconst Links = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\nconst LinksBl = styled.span`\r\n  color: #2563eb;\r\n  font-weight: 600;\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  background: #e04e4e;\r\n`;\r\nconst ErrorMessageText = styled.p`\r\n  color: white;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\nconst MinPassErrorCon = styled.div`\r\n  background: #f4ddde;\r\n`;\r\nconst MinPassErrorText = styled.p`\r\n  color: #bc8d8a;\r\n  font-weight: 300;\r\n  text-align: center;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [Email, setEmail] = useState();\r\n  const [error, setError] = useState();\r\n  const [minPass, setMinPass] = useState(0);\r\n  const [allowLogin, setAllowLogin] = useState(0);\r\n  const [passwordError, setPasswordError] = useState(null);\r\n  const PasswordInputRef = useRef(null);\r\n  const EmailInputRef = useRef(null);\r\n  const [passVisible, setPassVisible] = useState(false);\r\n  // const passVisible = []\r\n  // const [passVisible,setPassvisible]=useState=(false)\r\n\r\n  var userSession = {};\r\n  const user = { email: Email, password: Password };\r\n\r\n  \r\n  const handleSubmit = (e, type) => {\r\n    e.preventDefault();\r\n    if (type === \"Email\") {\r\n      setEmail(e.target.value);\r\n      setAllowLogin((prevValue) => prevValue + 1);\r\n      console.log(type, Email);\r\n    } else {\r\n      setPassword(e.target.value);\r\n      setMinPass((prev) => (prev += 1));\r\n      setAllowLogin((prevValue) => prevValue + 1);\r\n\r\n      console.log(type, Password);\r\n    }\r\n    // alert\r\n  };\r\n\r\n  // ErrorAlert();\r\n  const ToggleVisibility = () => {\r\n    const passwordDisplayType = PasswordInputRef.current.type;\r\n    if (passwordDisplayType === \"password\") {\r\n      PasswordInputRef.current.type = \"test\";\r\n      setPassVisible(true);\r\n    } else {\r\n      PasswordInputRef.current.type = \"password\";\r\n      setPassVisible(false);\r\n    }\r\n    // const type =  passwordDisplayType === \"password\"? passwordDisplayType === \"text\": passwordDisplayType==='password';\r\n    // return type;\r\n  };\r\n  const handleClick = async (e) => {\r\n    try {\r\n      // const User = await fetch.post(apiRoute + \"/auth/login\", user);\r\n\r\n    } catch (err) {\r\n      if (error) {\r\n        PasswordInputRef.current.value = \"\";\r\n      } else {\r\n        PasswordInputRef.current.value = \"\";\r\n      }\r\n      ErrorAlert(\r\n        \"We could`nt find an account matching the email and password you entered.Please check your email and password and try again.\"\r\n      );\r\n      console.log(err);\r\n        ErrorAlert(err.response.data.Error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"flex aic jcc\">\r\n      <Wrapper className=\"flex aic jcc fdc\">\r\n        <RegisterCon className=\"flex fdc jcse\">\r\n          {/* <ErrorMessage className=\"flex aic jcc\">\r\n            <ErrorMessageText>\r\n              We could`nt find an account matching the email and password you\r\n              entered.Please check your email and password and try again.\r\n            </ErrorMessageText>\r\n          </ErrorMessage> */}\r\n          <RegisterTextCon className=\"flex fdc aifs jcfs\">\r\n            <RegisterText>Login</RegisterText>\r\n            <span\r\n              style={{ width: \"22px\", height: \"3px\", background: \"blue\" }}\r\n            ></span>\r\n          </RegisterTextCon>\r\n          <InputWrapper>\r\n            <InputCon className=\"\">\r\n              <Inputlabel Htmlfor=\"name\">Email Address</Inputlabel>\r\n              <Input\r\n                ref={EmailInputRef}\r\n                className=\"\"\r\n                id=\"Address\"\r\n                placeholder=\"Email Address\"\r\n                onChange={(e) => handleSubmit(e, \"Email\")}\r\n              />\r\n            </InputCon>\r\n            <InputCon>\r\n              <Inputlabel Htmlfor=\"password\">Password</Inputlabel>\r\n              <InputContainer className=\"flex aic jcc\">\r\n                {/* <Lock /> */}\r\n                <Input\r\n                  ref={PasswordInputRef}\r\n                  className=\"\"\r\n                  style={{\r\n                    border: error && \"1px solid red\",\r\n                  }}\r\n                  error={error}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={(e) => handleSubmit(e, \"password\")}\r\n                />\r\n                {!passVisible ? (\r\n                  <VisibilityOff\r\n                    sx={{\r\n                      cursor: \"pointer\",\r\n                      position: \"absolute\",\r\n                      right: \"10px\",\r\n                      fontSize: \"1.2rem\",\r\n                    }}\r\n                    onClick={ToggleVisibility}\r\n                    id=\"visiblePassword_Icon\"\r\n                  />\r\n                ) : (\r\n                  <RemoveRedEye\r\n                    sx={{\r\n                      cursor: \"pointer\",\r\n                      position: \"absolute\",\r\n                      right: \"10px\",\r\n                      fontSize: \"1.2rem\",\r\n                    }}\r\n                    onClick={ToggleVisibility}\r\n                    id=\"visiblePassword_Icon\"\r\n                  />\r\n                )}\r\n              </InputContainer>\r\n              {passwordError && (\r\n                <MinPassErrorCon>\r\n                  <MinPassErrorText>{passwordError}</MinPassErrorText>\r\n                </MinPassErrorCon>\r\n              )}\r\n            </InputCon>\r\n          </InputWrapper>\r\n          <SubmitButton\r\n            onClick={handleClick}\r\n            type=\"submit\"\r\n            disabled={Password === \"\"}\r\n          >\r\n            Log in\r\n          </SubmitButton>\r\n        </RegisterCon>\r\n        <Redirect className=\"flex aic jcsb wrap w100 \">\r\n          <Links\r\n            className=\"flex aic jcc flex1\"\r\n            style={{ whiteSpace: \"nowrap\" }}\r\n          >\r\n            Don`t have an account?\r\n            <LinksBl>\r\n              <Link to=\"/register\" className=\"link\">\r\n                Register\r\n              </Link>\r\n            </LinksBl>\r\n          </Links>\r\n          <Links className=\"flex aic jcc flex1\" style={{ textAlign: \"center\" }}>\r\n            <LinksBl>\r\n              <Link\r\n                style={{\r\n                  color: \"red\",\r\n                  textDecoration: \"underline\",\r\n                  whiteSpace: \"nowrap\",\r\n                }}\r\n                to=\"/reset-password\"\r\n                className=\"link\"\r\n              >\r\n                Forgot password?\r\n              </Link>\r\n            </LinksBl>\r\n          </Links>\r\n        </Redirect>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\Register.jsx",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],[],"import styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useState,useRef,createContext } from \"react\";\r\nimport { tablet } from \"../responsive\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../context/context\";\r\nimport { useEffect } from \"react\";\r\nimport { api_endPoint } from \"../api_endPoint\";\r\nimport { EmailAlert, ErrorAlert } from \"../alerts\";\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #dbeafe;\r\n  color: #3c3c3c;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 40%;\r\n  ${tablet({ width: \"80%\" })};\r\n`;\r\n\r\n\r\nconst RegisterCon = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  padding: 25px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 15px -10px rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst RegisterTextCon = styled.div`\r\n  padding-bottom: 7px;\r\n`;\r\nconst RegisterText = styled.span`\r\n  font-weight: 900;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  grid-template-columns: 1fr 1fr;\r\n   {\r\n    ${tablet({ gridTemplateColumns: \"1fr\" })}\r\n  }\r\n`;\r\nconst InputCon = styled.div``;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 7px;\r\n  border: none;\r\n  outline: none;\r\n  background: transparent;\r\n  border: 1px solid #c5c5c5;\r\n  border-radius: 6px;\r\n  box-sizing: border-box;\r\n\r\n  &::placeholder {\r\n    font-size: 12px;\r\n  }\r\n`;\r\nconst Inputlabel = styled.label`\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n`;\r\n\r\n\r\nconst SubmitButton = styled.button`\r\n  background: #1e5eeb;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Hr = styled.hr`\r\n  background: #c5c5c5;\r\n  border: none;\r\n  width: 100%;\r\n  height: 1px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst SignUpOptions = styled.div``;\r\nconst SignUpOptionsHeader = styled.div`\r\n  padding: 7px 0;\r\n`;\r\nconst SignUpOptionsHeaderText = styled.span`\r\n  font-size: 11.6px;\r\n  font-weight: 900;\r\n  color: grey;\r\n`;\r\nconst SignUpOptionsButtonCon = styled.div`\r\n  gap: 20px;\r\n`;\r\nconst SignUpOptionsButton = styled.button`\r\n  background: #eee;\r\n  border-radius: 8px;\r\n  padding: 6px 30px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  border: none;\r\n`;\r\nconst SignUpOptionsIcon = styled.div`\r\n  margin-right: 7px;\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  padding: 8px 0;\r\n`;\r\nconst Links = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\nconst LinksBl = styled.span`\r\n  color: #2563eb;\r\n  font-weight: 600;\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst ErrorCon = styled.div`\r\n  margin: 6px 0;\r\n`;\r\nconst ErrorText = styled.p`\r\n  color: red;\r\n  font-size: 14px;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst LabelCon = styled.div`\r\n  margin-top: 0.5rem;\r\n`;\r\nconst LabelSpan = styled.span`\r\ndisplay:inline-block\r\n// height:2rem;\r\n// width:2rem;\r\nborder-radius:9999px;\r\noverflow:hidden;\r\n`;\r\nconst LabelImage = styled.img`\r\n  object-fit: cover;\r\n  height: 100px;\r\n  // max-width: 100px;\r\n  width: 100px;\r\n  border-radius: 50%;\r\n  border: 1px solid rgb(209 213 219 /1);\r\n`;\r\nconst InputLabel = styled.label`\r\n  margin-left: 1.25rem;\r\n  padding-top: 0.3rem;\r\n  padding-bottom: 0.3rem;\r\n  padding-left: 0.8rem;\r\n  padding-right: 0.8rem;\r\n  // border-width: 1px;\r\n  border-radius: 0.375rem;\r\n  font-size: 0.875rem;\r\n  line-height: 1.25rem;\r\n  font-weight: 500;\r\n  color: rgb(55 65 81 / 1);\r\n  background-color: rgb(255 255 255 / 1);\r\n  border: 1px solid rgb(209 213 219 /1);\r\n\r\n  &:hover {\r\n    background-color: rgb(249 250 251 / 1);\r\n  }\r\n`;\r\n\r\nconst InputFile = styled.input`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  border-width: 0;\r\n`;\r\n\r\nconst Register = () => {\r\n  const user = useContext(UserContext)\r\n  const passWordRef = useRef(null);\r\n  const passWordMatchRef = useRef(null);\r\n  const [username, setName] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [passMatch, setPassMatch] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const {dispatchUserEvent}=useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    console.log(user)\r\n  }, [dispatchUserEvent]);\r\n  \r\n\r\n  const handleSubmitInputChange = (e, type) => {\r\n    e.preventDefault();\r\n    if (type === \"name\") {\r\n      setName(e.target.value);\r\n      console.log(type, username);\r\n    } else if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n      console.log(type, email);\r\n    } else {\r\n      setPassword(e.target.value);\r\n      console.log(type, password);\r\n    }\r\n  };\r\n\r\n  \r\n  const validatePasswordComfirm = (password, passMatch) => {\r\n    return password === passMatch;\r\n  };\r\nconst ValidateEmail = (email)=>{\r\n  //  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\r\n  // return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\r\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return regex.test(email)\r\n}\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password.length < 1 || email.length < 1 || username.length < 1) {\r\n      console.log(email, password, username);\r\n      ErrorAlert(\"Please enter all fields,All fields are required\");\r\n    } else if (passMatch.length < 1) {\r\n      ErrorAlert(\"Please comfirm your password\");\r\n    } else if (!validatePasswordComfirm(password, passMatch)) {\r\n      passWordRef.current.value = \"\";\r\n      passWordMatchRef.current.value = \"\";\r\n     ErrorAlert(\r\n       \"Passwords do not match, make sure both passwords match correctly\"\r\n     );\r\n    } \r\n    else if(!ValidateEmail(email)){\r\n      ErrorAlert('Please enter a valid email address')\r\n    }\r\n    else {\r\n      const formData = new FormData();\r\n      formData.append(\"username\", username);\r\n      formData.append(\"email\", email);\r\n      formData.append(\"password\", password);\r\n      try {\r\n        const res=  await axios.post(`${api_endPoint}register`, {\r\n          \"username\":username,\r\n          'email':email,\r\n          \"password\":password\r\n        });\r\n        console.log(res)\r\n\r\n        EmailAlert(`please check your email ${email} to activate your account`);\r\n        dispatchUserEvent(\"Register\", {email:email});\r\n\r\n\r\n        navigate(\"/otp-verification\");\r\n      } catch (err) {\r\n        console.log(err?.response.data.Error);\r\n        ErrorAlert(err?.response.data.Error)\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"flex aic jcc\">\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={true}\r\n        closeOnClick={true}\r\n        pauseOnFocusLoss={true}\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        rtl={false}\r\n        fontSize=\"2px\"\r\n      />\r\n      <Wrapper className=\"flex aic jcc fdc\">\r\n        <RegisterCon>\r\n          <RegisterTextCon className=\"flex fdc aifs jcfs\">\r\n            <RegisterText>Registration</RegisterText>\r\n            <span\r\n              style={{ width: \"22px\", height: \"3px\", background: \"blue\" }}\r\n            ></span>\r\n          </RegisterTextCon>\r\n          <InputWrapper>\r\n            <InputCon>\r\n              <Inputlabel Htmlfor=\"name\">Enter your username</Inputlabel>\r\n              <Input\r\n                id=\"username\"\r\n                placeholder=\"enter your username\"\r\n                onChange={(e) => handleSubmitInputChange(e, \"name\")}\r\n              />\r\n            </InputCon>\r\n            <InputCon>\r\n              <Inputlabel Htmlfor=\"name\">Enter your email address</Inputlabel>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"youremail@example.com\"\r\n                onChange={(e) => handleSubmitInputChange(e, \"email\")}\r\n                required\r\n              />\r\n            </InputCon>\r\n            <InputCon>\r\n              <Inputlabel Htmlfor=\"password\">Create password</Inputlabel>\r\n              <Input\r\n                ref={passWordRef}\r\n                id=\"password\"\r\n                value={password}\r\n                placeholder=\"create password\"\r\n                onChange={(e) => handleSubmitInputChange(e, \"password\")}\r\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                title=\"must contain at least one number and one uppercase letter,and at least 8 or more characters\"\r\n              />\r\n            </InputCon>\r\n            <InputCon>\r\n              <Inputlabel Htmlfor=\"password again\">Comfirm password</Inputlabel>\r\n              <Input\r\n                id=\"password again\"\r\n                placeholder=\"comfirm password\"\r\n                value={passMatch}\r\n                ref={passWordMatchRef}\r\n                onChange={(e) => setPassMatch(e.target.value)}\r\n              />\r\n            </InputCon>\r\n          </InputWrapper>\r\n\r\n          <SubmitButton type=\"submit\" onClick={handleSubmit}>\r\n            Account Register\r\n          </SubmitButton>\r\n          <Hr />\r\n        </RegisterCon>\r\n        <Redirect>\r\n          <Links className=\"flex aic jcc\">\r\n            Already have an account?\r\n            <LinksBl>\r\n              <Link to=\"/login\" className=\"link\">\r\n                Login\r\n              </Link>\r\n            </LinksBl>\r\n          </Links>\r\n        </Redirect>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\VerifyOTP.jsx",["124","125","126","127","128","129","130","131"],[],"import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { tablet } from \"../responsive\";\r\nimport styled from \"styled-components\";\r\nimport OTPInput from \"react-otp-input\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../context/context\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #dbeafe;\r\n  color: #3c3c3c;\r\n`;\r\nconst Wrapper = styled.div`\r\n  background: white;\r\n  border-radius: 7px;\r\n  padding: 20px;\r\n  gap: 1rem;\r\n  //   width: 30%;\r\n  // height: 65%;\r\n  ${tablet({ width: \"80%\" })};\r\n`;\r\n\r\nconst Header = styled.div``;\r\nconst HeaderMainText = styled.h2`\r\n  font-weight: 700;\r\n  text-align: center;\r\n`;\r\nconst HeaderSmText = styled.p`\r\n  font-size: 0.79rem;\r\n  text-align: center;\r\n`;\r\nconst HeaderBdText = styled.h4``;\r\n\r\nconst ResetEmail = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\nconst ResetEmailBgText = styled.h4``;\r\nconst ResetEmailBdText = styled.span`\r\n  margin: 0 2px;\r\n  font-size: 0.91rem;\r\n`;\r\n\r\nconst ChangeEmailCon = styled.div`\r\n  width: 60%;\r\n`;\r\nconst ChangeEmailInput = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom: 1px solid grey;\r\n  // border-radius: 5px;\r\n  padding: 5px 3px;\r\n  transition: 0.5s all;\r\n\r\n  &:focus {\r\n    border-bottom: 1.8px solid #2563eb;\r\n  }\r\n`;\r\nconst ChangeEmailButton = styled.div``;\r\n\r\nconst OtpPinsInput = styled.input`\r\n  outline: none;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: none;\r\n  border-bottom: 2px solid grey;\r\n  margin: 0 10px;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst ButtonCon = styled.div``;\r\nconst Button = styled.button`\r\n  background: #2563eb;\r\n  padding: 0.6rem 2.2rem;\r\n  border-radius: 4px;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst VerifyOTP = () => {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [changeEmail, setChangeEMail] = useState(false);\r\n  const user = useContext(UserContext);\r\n  const dispatchUserEvent = useContext(UserContext);\r\n  const [newEmail, setNewEmail] = useState(user.user.email);\r\n  console.log(user);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // sessionStorage.setItem(\"email\", user.user.email);\r\n\r\n    // dispatchUserEvent(\"Register\", {\r\n    //   email: sessionStorage.getItem(\"email\"),\r\n    // });\r\n    // handle\r\n    handleEmailUpdate();\r\n\r\n    console.log(user);\r\n  }, [dispatchUserEvent]);\r\n\r\n  // const [test,setTest]=useContext(A)\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"verifyemail\",\r\n        {\r\n          email: user.user.email,\r\n        }\r\n      );\r\n      // sessionStorage.setItem(\"email\", newEmail);\r\n      dispatchUserEvent(\"Register\", { email: user.user.email });\r\n      console.log(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    // sessionStorage.setItem('user',\"username\")\r\n  };\r\n\r\n  const UpdateEmail = async (ty) => {\r\n    // sessionStorage.removeItem(\"email\");\r\n    setChangeEMail(false);\r\n   try {\r\n     console.log(newEmail);\r\n     const res = await axios.put(\r\n       \"verifyemail\",\r\n       {\r\n         email: user.user.email,\r\n         newEmail: newEmail,\r\n       }\r\n     );\r\n   } catch (err) {\r\n     console.log(err);\r\n   } \r\n   handleEmailUpdate();\r\n  };\r\n  \r\n  \r\n  const  handleEmailUpdate =async ()=>{\r\n    try {\r\n      const res = await axios.post(\"verifyemail\",{\r\n       otp:otp,\r\n       email:user.user.email,\r\n      });\r\n      navigate('/')\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    // sessionStorage.setItem(\"email\", newEmail);\r\n    dispatchUserEvent(\"Register\", { email: newEmail });\r\n    // setNewEmail();\r\n}\r\n\r\n  return (\r\n    <Container className=\"flex aic jcc\">\r\n      <Wrapper className=\"flex aic jcc fdc\">\r\n        <Header className=\"w100 flex aic jcc fdc\">\r\n          {!changeEmail ? (\r\n            <>\r\n              <HeaderMainText>\r\n                Verify your Email\r\n                {/* Please enter the One-Time-Password to verify your account */}\r\n              </HeaderMainText>\r\n              <HeaderSmText>\r\n                Type in the 6 digit OTP code that was sent to your Email.\r\n                {/* A one time password has been sent to email */}\r\n              </HeaderSmText>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <HeaderMainText>\r\n                Enter your email-address to continue\r\n              </HeaderMainText>\r\n              <HeaderSmText>\r\n                We care about your privacy,like our own\r\n              </HeaderSmText>\r\n            </>\r\n          )}\r\n        </Header>\r\n        {!changeEmail ? (\r\n          <>\r\n            <ResetEmail className=\" aifs jcfs fdc w100 \">\r\n              <ResetEmailBgText>{user.user.email}</ResetEmailBgText>\r\n              <ResetEmailBdText>Wrong Email?</ResetEmailBdText>\r\n              <ResetEmailBdText\r\n                onClick={() => setChangeEMail(true)}\r\n                style={{ color: \"#2563eb\", fontWeight: 600, cursor: \"pointer\" }}\r\n              >\r\n                Change\r\n              </ResetEmailBdText>\r\n            </ResetEmail>\r\n\r\n            <OTPInput\r\n              value={otp}\r\n              onChange={setOtp}\r\n              numInputs={6}\r\n              renderSeparator={<span> </span>}\r\n              renderInput={(props) => <OtpPinsInput {...props} />}\r\n            />\r\n          </>\r\n        ) : (\r\n          <ChangeEmailCon className=\"flex aic jcc\">\r\n            <ChangeEmailInput\r\n              placeholder={`Update your email`}\r\n              type=\"email\"\r\n              defaultValue={user.user.email}\r\n              onChange={(e) => setNewEmail(e.target.value)}\r\n            />\r\n            {/* <ChangeEmailButton>Change Email</ChangeEmailButton> */}\r\n          </ChangeEmailCon>\r\n        )}\r\n        <ButtonCon className=\"flex aic jcc\">\r\n          {changeEmail ? (\r\n            <Button className=\"cp\" onClick={UpdateEmail}>\r\n              Continue\r\n            </Button>\r\n          ) : (\r\n            <div className=\"flex aic jcc fdc\" style={{ gap: \"10px\" }}>\r\n              <p\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontSize: \"14px\",\r\n                  lineHeight: \"18px\",\r\n                }}\r\n              >\r\n                Did`nt recieve otp?\r\n                <br />\r\n                <b style={{color:\"#2563eb\",cursor:\"pointer\"}} >Resend</b>\r\n              </p>\r\n              <Button className=\"cp\" type=\"submit\" onClick={handleEmailUpdate}>\r\n                VERIFY\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </ButtonCon>\r\n        {/* <div>\r\n          <div>\r\n            <p>Didn`t recieve otp? send again</p>\r\n            <p>change email</p>\r\n          </div>\r\n        </div> */}\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VerifyOTP;\r\n","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\otp.jsx",[],[],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\context\\context.js",[],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\Home.jsx",["132","133","134","135"],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\ResetPassword.jsx",["136","137","138","139","140"],[],"import { useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\"\r\nimport { UserContext } from \"../context/context\";\r\nimport { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {  RemoveRedEye, VisibilityOff } from \"@mui/icons-material\";\r\nimport { SLaptop, stablet, tablet } from \"../responsive\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  width: 100dvw;\r\n  height: 100vh;\r\n  background: #dbeafe;\r\n  color: #3c3c3c;\r\n`;\r\nconst Wrapper = styled.div`\r\nmax-width:30%;\r\n${SLaptop({maxWidth:\"50%\"})};\r\n${stablet({maxWidth:\"70%\"})};\r\n// width:100%;\r\ngap:1rem;\r\nbox-shadow:1px 1px 10px rgba(0,0,0,0.10);\r\npadding:30px;\r\nborder-radius:.7rem;\r\nbackground:white;\r\n`\r\nconst Header = styled.div``\r\nconst HeaderImgCon = styled.div`\r\nwidth:100%:\r\nheight:100%;\r\n`\r\nconst HeaderImg = styled.img`\r\nfont-size:.8rem;\r\nwidth:30%;\r\nheight:30%;\r\nobject-fit:contain;\r\n`;\r\nconst HeaderBgText = styled.p`\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  // white-space:nowrap;\r\n  ${tablet({fontSize:\"1.7rem\",lineHeight:\"30px\"})};\r\n`;\r\nconst HeaderSmText = styled.p`\r\ntext-align:center;\r\nfont-weight:200;\r\nfont-size:.85rem;\r\nopacity:.8;\r\n\r\n  ${tablet({fontSize:\".7rem\"})};\r\n`;\r\n\r\nconst InputCon = styled.div`\r\nwidth:100%;\r\n`\r\nconst InputWrapper = styled.div`\r\n  width: 100%;\r\n  border: 1px solid grey;\r\n  height: 100%;\r\n  background: transparent;\r\n  margin: 2px 0;\r\n`;\r\nconst InputLabel = styled.label`\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  outline: none;\r\n  color: gray;\r\n  background: transparent;\r\n  padding:8px 7px;\r\n`;\r\n\r\nconst ButtonCon = styled.div`\r\n   width:100%;\r\n`;\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background: ${(props) =>\r\n    props.type !== \"outline\" ? \"#297f85\" : \"transparent\"};\r\n  padding: ${(props) => (props.type !== \"outline\" ? \"10px 35px\" : \"10px 8px\")};\r\n  color: ${(props) => (props.type !== \"outline\" ? \"white\" : \"#297f85\")};\r\n  border: none;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  font-weight:500;\r\n  white-space: nowrap;\r\n`;\r\n\r\n\r\nconst ResetPassTextCon = styled.div`\r\n  margin: 10px 0;\r\n  ${tablet({ margin: \"5px 0\" })};\r\n`;\r\nconst ResetPassText = styled.p`\r\n  // text-align:center;\r\n  font-weight: 700;\r\n  font-size: 2rem;\r\n  ${tablet({ fontSize: \"1.2rem\" })};\r\n`;\r\nconst ResetPassWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\nconst ResetPassCon = styled.div`\r\n  display: flex;\r\n  align-items: Center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst Back = styled.div``;\r\nconst BackBtn = styled.button`\r\n  color: white;\r\n  border-radius: 4px;\r\n  padding: 8px 0;\r\n  width: 170px;\r\n  margin: 13px 0;\r\n  cursor: pointer;\r\n  background: #2563eb;\r\n  border: none;\r\n  white-space:nowrap;\r\n  font-size:.95rem;\r\n`;\r\nconst Input2Con = styled.div`\r\n  // background: white;\r\n  width: 100%;\r\n`;\r\nconst Input2 = styled.input`\r\n  background: transparent;\r\n  width: 100%;\r\n  // height: 100%;\r\n  padding: 7px;\r\n  border: none;\r\n  outline: none;\r\n  border: 1px solid #eee;\r\n  border-radius: 6px;\r\n  box-sizing: border-box;\r\n\r\n  &:focus {\r\n    background: #eee;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst Inputlabel = styled.label`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  margin: 7px 0;\r\n`;\r\nconst InputContainer = styled.div`\r\n  border: 1px solid #eee;\r\n  flex: 1;\r\n  // padding: 0 30px;\r\n  // height: 60px;\r\n  color: grey;\r\n  position: relative;\r\n  // margin: 20px 0;\r\n`;\r\n\r\n\r\nfunction ResetPassword() {\r\n\r\n  const user = useContext(UserContext);\r\n  const {dispatchUserEvent} = useContext(UserContext);\r\n  const [newPassword, setNewPassword] = useState();\r\n  const [oldPassword, setOldPassword] = useState();\r\n  const [email,setEmail]=useState()\r\n  const navigate = useNavigate();\r\n  // console.log(user);\r\n  const PasswordInputRef = useRef([]);\r\n  const [resetPass, setResetPass] = useState(true);\r\n  const [passVisible, setPassVisible] = useState(false);\r\n  const ErrorAlert = (message) =>\r\n    toast.error(message, {\r\n      bodyClassName: \"ToastifyLoginError\",\r\n      position: \"bottom-center\",\r\n      fontSize: \"2px\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      newestOnTop: true,\r\n      closeOnClick: true,\r\n      pauseOnFocusLoss: true,\r\n      draggable: true,\r\n      pauseOnHover: true,\r\n      theme: \"light\",\r\n      rtl: false,\r\n    });\r\n      const SucessAlert = (message) =>\r\n        toast.info(message, {\r\n          bodyClassName: \"ToastifyLoginError\",\r\n          position: \"bottom-center\",\r\n          fontSize: \"2px\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          newestOnTop: true,\r\n          closeOnClick: true,\r\n          pauseOnFocusLoss: true,\r\n          draggable: true,\r\n          pauseOnHover: true,\r\n          theme: \"light\",\r\n          rtl: false,\r\n        });\r\n  const ToggleVisibility = (currentInput) => {\r\n    const passwordDisplayType = PasswordInputRef.current[currentInput].type;\r\n    if (passwordDisplayType === \"password\") {\r\n      PasswordInputRef.current[currentInput].type = \"text\";\r\n      setPassVisible(currentInput);\r\n    } else {\r\n      PasswordInputRef.current[currentInput].type = \"password\";\r\n      setPassVisible(null);\r\n    }\r\n  };\r\n\r\n  const handleResetPassword =async () => {\r\n    try{\r\n      const res = await axios.put(\r\n        \"resetpass\",\r\n        {\r\n          oldpass: oldPassword,\r\n          newpass: newPassword,\r\n        }\r\n      );\r\nSucessAlert(res.response.data.sucess);\r\n\r\n    }catch(err){\r\n      console.log(err);\r\n        ErrorAlert(err.response.data.Error);\r\n      \r\n    }\r\n}\r\n\r\nconst sendResetPassOtp = async ()=>{\r\n  try {\r\n     await axios.get(\r\n       \"resetpass\",\r\n       {},\r\n       {\r\n         headers: {\r\n           email: email,\r\n         },\r\n       }\r\n     );\r\n     navigate('/verify-reset-password-token')\r\n  } catch (error) {\r\n    console.log(error)\r\n            ErrorAlert(error.response.data.Error);\r\n\r\n  }\r\n}\r\n\r\nconst Logout = ()=>{\r\n  dispatchUserEvent(\"LOGOUT\");\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"flex aic jcc\">\r\n      <Wrapper className=\"flex aic jcc fdc\">\r\n        <Header>\r\n          <HeaderImgCon className=\"flex aic jcc\">\r\n            <HeaderImg\r\n              src=\"/resetpassword_vector.png\"\r\n              alt=\"resetpassword_vector\"\r\n            />\r\n          </HeaderImgCon>\r\n          <HeaderBgText>Reset Your Password</HeaderBgText>\r\n          <HeaderSmText>\r\n            Input your account email and we`ll send an OTP to your email to\r\n            reset your password!.\r\n          </HeaderSmText>\r\n        </Header>\r\n        {!user.user.accessToken ? (\r\n          <>\r\n            <InputCon>\r\n              <InputLabel htmlFor=\"resetPassword\">Email</InputLabel>\r\n              <InputWrapper>\r\n                <Input\r\n                  placeholder=\"Enter your account email\"\r\n                  type=\"email\"\r\n                  id=\"resetPassword email\"\r\n                  className=\"\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </InputWrapper>\r\n            </InputCon>\r\n            <ButtonCon className=\"flex aic jcc\">\r\n              <Button onClick={sendResetPassOtp}>Send Otp</Button>\r\n              <Link className=\"link\" to=\"/login\">\r\n                <Button type=\"outline\" style={{ textDecoration: \"underline\" }}>\r\n                  Return to login\r\n                </Button>\r\n              </Link>\r\n            </ButtonCon>\r\n          </>\r\n        ) : (\r\n          <ResetPassWrapper>\r\n            <ResetPassCon>\r\n              {/* <ResetPassInputCon>\r\n                <ResetPassLabelCon id=\"resetPassOld\">\r\n                  Enter your old password\r\n                </ResetPassLabelCon>\r\n                <ResetPassInput id=\"resetPassOld\" className=\"\" />\r\n              </ResetPassInputCon>\r\n              <ResetPassInputCon>\r\n                <ResetPassLabelCon id=\"resetPassOld\">\r\n                  Enter your old password\r\n                </ResetPassLabelCon>\r\n                <ResetPassInput id=\"resetPassOld\" className=\"\" />\r\n              </ResetPassInputCon> */}\r\n              <Input2Con>\r\n                <Inputlabel Htmlfor=\"password\">\r\n                  {\" \"}\r\n                  Enter your old password\r\n                </Inputlabel>\r\n                <InputContainer className=\"flex aic jcc\">\r\n                  {/* <Lock /> */}\r\n                  <Input2\r\n                    ref={(el) => PasswordInputRef.current.push(el)}\r\n                    className=\"\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your old password\"\r\n                    value={oldPassword}\r\n                    onChange={(e) => setOldPassword(e.target.value)}\r\n                  />\r\n                  {passVisible === 0 ? (\r\n                    <RemoveRedEye\r\n                      sx={{\r\n                        cursor: \"pointer\",\r\n                        position: \"absolute\",\r\n                        right: \"10px\",\r\n                        fontSize: \".8rem\",\r\n                      }}\r\n                      onClick={() => ToggleVisibility(0)}\r\n                      id=\"visiblePassword_Icon\"\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOff\r\n                      sx={{\r\n                        cursor: \"pointer\",\r\n                        position: \"absolute\",\r\n                        right: \"10px\",\r\n                        fontSize: \"1.2rem\",\r\n                      }}\r\n                      onClick={() => ToggleVisibility(0)}\r\n                      id=\"visiblePassword_Icon\"\r\n                    />\r\n                  )}\r\n                </InputContainer>\r\n              </Input2Con>\r\n              <Input2Con>\r\n                <Inputlabel Htmlfor=\"password\">\r\n                  {\" \"}\r\n                  Enter your new password\r\n                </Inputlabel>\r\n                <InputContainer className=\"flex aic jcc\">\r\n                  {/* <Lock /> */}\r\n                  <Input2\r\n                    ref={(el) => PasswordInputRef.current.push(el)}\r\n                    className=\"\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    value={newPassword}\r\n                    placeholder=\"Enter your new password\"\r\n                    onChange={(e) => setNewPassword(e.currentTarget.value)}\r\n                  />\r\n                  {passVisible === 1 ? (\r\n                    <RemoveRedEye\r\n                      sx={{\r\n                        cursor: \"pointer\",\r\n                        position: \"absolute\",\r\n                        right: \"10px\",\r\n                        fontSize: \"1.2rem\",\r\n                      }}\r\n                      onClick={() => ToggleVisibility(1)}\r\n                      id=\"visiblePassword_Icon\"\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOff\r\n                      sx={{\r\n                        cursor: \"pointer\",\r\n                        position: \"absolute\",\r\n                        right: \"10px\",\r\n                        fontSize: \"1.2rem\",\r\n                      }}\r\n                      onClick={() => ToggleVisibility(1)}\r\n                      id=\"visiblePassword_Icon\"\r\n                    />\r\n                  )}\r\n                </InputContainer>\r\n              </Input2Con>\r\n            </ResetPassCon>\r\n            <Back className=\"flex aic jcse fdc w100\">\r\n              <BackBtn\r\n                onClick={handleResetPassword}\r\n                className=\"button_transition flex aic jcc\"\r\n              >\r\n                Reset Password\r\n              </BackBtn>\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    textDecoration: \"underline\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={Logout}\r\n                >\r\n                  forgot password?\r\n                </p>\r\n              </div>\r\n            </Back>\r\n          </ResetPassWrapper>\r\n        )}\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ResetPassword","C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\UsersList.jsx",["141","142","143","144","145","146","147"],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\helpers.js",[],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\Pages\\ResetPasswordOtp.jsx",["148"],[],"import axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { SLaptop, stablet, tablet } from \"../responsive\";\r\nimport { useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #dbeafe;\r\n  color: #3c3c3c;\r\n`;\r\nconst Wrapper = styled.div`\r\n  max-width: 30%;\r\n  ${SLaptop({ maxWidth: \"50%\" })};\r\n  ${stablet({ maxWidth: \"70%\" })};\r\n  // width:100%;\r\n  gap: 1rem;\r\n  box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n  border-radius: 0.7rem;\r\n  background: white;\r\n`;\r\nconst Header = styled.div``;\r\nconst HeaderImgCon = styled.div`\r\nwidth:100%:\r\nheight:100%;\r\n`;\r\nconst HeaderImg = styled.img`\r\n  font-size: 0.8rem;\r\n  width: 30%;\r\n  height: 30%;\r\n  object-fit: contain;\r\n`;\r\nconst HeaderBgText = styled.p`\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  // white-space:nowrap;\r\n  ${tablet({ fontSize: \"1.7rem\", lineHeight: \"30px\" })};\r\n`;\r\nconst HeaderSmText = styled.p`\r\n  text-align: center;\r\n  font-weight: 100;\r\n  font-size: 0.85rem;\r\n  opacity: 0.8;\r\n\r\n  ${tablet({ fontSize: \".7rem\" })};\r\n`;\r\n\r\nconst InputCon = styled.div`\r\n  width: 100%;\r\n`;\r\nconst InputWrapper = styled.div`\r\n  width: 100%;\r\n  border: 1px solid grey;\r\n  height: 100%;\r\n  background: transparent;\r\n  margin: 2px 0;\r\n`;\r\nconst InputLabel = styled.label``;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  outline: none;\r\n  color: gray;\r\n  background: transparent;\r\n  padding: 8px 7px;\r\n`;\r\n\r\nconst ButtonCon = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background: ${(props) =>\r\n    props.type !== \"outline\" ? \"#297f85\" : \"transparent\"};\r\n  padding: ${(props) => (props.type !== \"outline\" ? \"10px 35px\" : \"10px 8px\")};\r\n  color: ${(props) => (props.type !== \"outline\" ? \"white\" : \"#297f85\")};\r\n  border: none;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst ResetPasswordOtp = () => {\r\n      const [email, setEmail] = useState();\r\n    const [token,setToken]=useState()\r\n    const [newPass,setNewPass]=useState()\r\n\r\n    const SendRestOutToken = async () => {\r\n      try {\r\n        await axios.put(\r\n          \"resetouttoken\",\r\n          {},\r\n          {\r\n            headers: {\r\n              token: token,\r\n              newPass: newPass,\r\n            },\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n  return (\r\n    <Container className=\"flex aic jcc\">\r\n      <Wrapper className=\"flex aic jcc fdc\">\r\n        <Header>\r\n          <HeaderImgCon className=\"flex aic jcc\">\r\n            <HeaderImg\r\n              src=\"/resetpassword_vector.png\"\r\n              alt=\"resetpassword_vector\"\r\n            />\r\n          </HeaderImgCon>\r\n          <HeaderBgText>Reset Your Password</HeaderBgText>\r\n          <HeaderSmText>\r\n            Type in the password reset token that has been sent to your email\r\n            address.\r\n          </HeaderSmText>\r\n        </Header>\r\n        <InputCon>\r\n          <InputLabel htmlFor=\"resetPassword\">Token</InputLabel>\r\n          <InputWrapper>\r\n            <Input\r\n              placeholder=\"Enter your reset password token\"\r\n              type=\"text\"\r\n              id=\"resetPassword token\"\r\n              className=\"\"\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n            />\r\n          </InputWrapper>\r\n        </InputCon>\r\n        <InputCon>\r\n          <InputLabel htmlFor=\"resetPassword\">Email</InputLabel>\r\n          <InputWrapper>\r\n            <Input\r\n              placeholder=\"Enter your account email\"\r\n              type=\"email\"\r\n              id=\"resetPassword email\"\r\n              className=\"\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </InputWrapper>\r\n        </InputCon>\r\n        <ButtonCon className=\"flex aic jcc\">\r\n          <Button onClick={SendRestOutToken}>Reset Password</Button>\r\n        </ButtonCon>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordOtp;\r\n","C:\\Xavier\\karbox - Copy\\iot\\src\\api_endPoint.js",[],[],"C:\\Xavier\\karbox - Copy\\iot\\src\\alerts.js",[],[],{"ruleId":"149","severity":1,"message":"150","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":23},{"ruleId":"149","severity":1,"message":"153","line":6,"column":23,"nodeType":"151","messageId":"152","endLine":6,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":34,"column":7,"nodeType":"156","messageId":"157","endLine":35,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":52,"column":9,"nodeType":"151","messageId":"152","endLine":52,"endColumn":17},{"ruleId":"149","severity":1,"message":"159","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"149","severity":1,"message":"160","line":1,"column":21,"nodeType":"151","messageId":"152","endLine":1,"endColumn":28},{"ruleId":"149","severity":1,"message":"161","line":105,"column":7,"nodeType":"151","messageId":"152","endLine":105,"endColumn":9},{"ruleId":"149","severity":1,"message":"162","line":113,"column":7,"nodeType":"151","messageId":"152","endLine":113,"endColumn":20},{"ruleId":"149","severity":1,"message":"163","line":114,"column":7,"nodeType":"151","messageId":"152","endLine":114,"endColumn":26},{"ruleId":"149","severity":1,"message":"164","line":117,"column":7,"nodeType":"151","messageId":"152","endLine":117,"endColumn":30},{"ruleId":"149","severity":1,"message":"165","line":122,"column":7,"nodeType":"151","messageId":"152","endLine":122,"endColumn":29},{"ruleId":"149","severity":1,"message":"166","line":125,"column":7,"nodeType":"151","messageId":"152","endLine":125,"endColumn":26},{"ruleId":"149","severity":1,"message":"167","line":133,"column":7,"nodeType":"151","messageId":"152","endLine":133,"endColumn":24},{"ruleId":"149","severity":1,"message":"168","line":151,"column":7,"nodeType":"151","messageId":"152","endLine":151,"endColumn":19},{"ruleId":"149","severity":1,"message":"169","line":154,"column":7,"nodeType":"151","messageId":"152","endLine":154,"endColumn":23},{"ruleId":"149","severity":1,"message":"170","line":172,"column":17,"nodeType":"151","messageId":"152","endLine":172,"endColumn":25},{"ruleId":"149","severity":1,"message":"171","line":173,"column":10,"nodeType":"151","messageId":"152","endLine":173,"endColumn":17},{"ruleId":"149","severity":1,"message":"172","line":174,"column":10,"nodeType":"151","messageId":"152","endLine":174,"endColumn":20},{"ruleId":"149","severity":1,"message":"173","line":175,"column":25,"nodeType":"151","messageId":"152","endLine":175,"endColumn":41},{"ruleId":"149","severity":1,"message":"174","line":182,"column":7,"nodeType":"151","messageId":"152","endLine":182,"endColumn":18},{"ruleId":"149","severity":1,"message":"175","line":183,"column":9,"nodeType":"151","messageId":"152","endLine":183,"endColumn":13},{"ruleId":"149","severity":1,"message":"176","line":4,"column":26,"nodeType":"151","messageId":"152","endLine":4,"endColumn":31},{"ruleId":"149","severity":1,"message":"177","line":6,"column":26,"nodeType":"151","messageId":"152","endLine":6,"endColumn":39},{"ruleId":"149","severity":1,"message":"162","line":91,"column":7,"nodeType":"151","messageId":"152","endLine":91,"endColumn":20},{"ruleId":"149","severity":1,"message":"163","line":92,"column":7,"nodeType":"151","messageId":"152","endLine":92,"endColumn":26},{"ruleId":"149","severity":1,"message":"164","line":95,"column":7,"nodeType":"151","messageId":"152","endLine":95,"endColumn":30},{"ruleId":"149","severity":1,"message":"165","line":100,"column":7,"nodeType":"151","messageId":"152","endLine":100,"endColumn":29},{"ruleId":"149","severity":1,"message":"166","line":103,"column":7,"nodeType":"151","messageId":"152","endLine":103,"endColumn":26},{"ruleId":"149","severity":1,"message":"167","line":111,"column":7,"nodeType":"151","messageId":"152","endLine":111,"endColumn":24},{"ruleId":"149","severity":1,"message":"178","line":128,"column":7,"nodeType":"151","messageId":"152","endLine":128,"endColumn":15},{"ruleId":"149","severity":1,"message":"179","line":131,"column":7,"nodeType":"151","messageId":"152","endLine":131,"endColumn":16},{"ruleId":"149","severity":1,"message":"180","line":137,"column":7,"nodeType":"151","messageId":"152","endLine":137,"endColumn":15},{"ruleId":"149","severity":1,"message":"181","line":140,"column":7,"nodeType":"151","messageId":"152","endLine":140,"endColumn":16},{"ruleId":"149","severity":1,"message":"182","line":147,"column":7,"nodeType":"151","messageId":"152","endLine":147,"endColumn":17},{"ruleId":"149","severity":1,"message":"183","line":155,"column":7,"nodeType":"151","messageId":"152","endLine":155,"endColumn":17},{"ruleId":"149","severity":1,"message":"184","line":175,"column":7,"nodeType":"151","messageId":"152","endLine":175,"endColumn":16},{"ruleId":"149","severity":1,"message":"185","line":194,"column":10,"nodeType":"151","messageId":"152","endLine":194,"endColumn":15},{"ruleId":"149","severity":1,"message":"170","line":194,"column":17,"nodeType":"151","messageId":"152","endLine":194,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":201,"column":6,"nodeType":"188","endLine":201,"endColumn":25,"suggestions":"189"},{"ruleId":"149","severity":1,"message":"190","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"176","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":31},{"ruleId":"149","severity":1,"message":"191","line":37,"column":7,"nodeType":"151","messageId":"152","endLine":37,"endColumn":19},{"ruleId":"149","severity":1,"message":"192","line":66,"column":7,"nodeType":"151","messageId":"152","endLine":66,"endColumn":24},{"ruleId":"186","severity":1,"message":"193","line":109,"column":6,"nodeType":"188","endLine":109,"endColumn":25,"suggestions":"194"},{"ruleId":"149","severity":1,"message":"195","line":112,"column":9,"nodeType":"151","messageId":"152","endLine":112,"endColumn":21},{"ruleId":"149","severity":1,"message":"196","line":134,"column":12,"nodeType":"151","messageId":"152","endLine":134,"endColumn":15},{"ruleId":"149","severity":1,"message":"196","line":150,"column":13,"nodeType":"151","messageId":"152","endLine":150,"endColumn":16},{"ruleId":"149","severity":1,"message":"190","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"176","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":31},{"ruleId":"149","severity":1,"message":"197","line":66,"column":7,"nodeType":"151","messageId":"152","endLine":66,"endColumn":20},{"ruleId":"149","severity":1,"message":"196","line":242,"column":13,"nodeType":"151","messageId":"152","endLine":242,"endColumn":16},{"ruleId":"149","severity":1,"message":"190","line":6,"column":10,"nodeType":"151","messageId":"152","endLine":6,"endColumn":24},{"ruleId":"149","severity":1,"message":"198","line":96,"column":7,"nodeType":"151","messageId":"152","endLine":96,"endColumn":23},{"ruleId":"149","severity":1,"message":"199","line":100,"column":7,"nodeType":"151","messageId":"152","endLine":100,"endColumn":20},{"ruleId":"149","severity":1,"message":"200","line":180,"column":10,"nodeType":"151","messageId":"152","endLine":180,"endColumn":19},{"ruleId":"149","severity":1,"message":"201","line":180,"column":21,"nodeType":"151","messageId":"152","endLine":180,"endColumn":33},{"ruleId":"149","severity":1,"message":"190","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"176","line":1,"column":26,"nodeType":"151","messageId":"152","endLine":1,"endColumn":31},{"ruleId":"149","severity":1,"message":"202","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":16},{"ruleId":"149","severity":1,"message":"203","line":329,"column":9,"nodeType":"151","messageId":"152","endLine":329,"endColumn":25},{"ruleId":"149","severity":1,"message":"196","line":331,"column":13,"nodeType":"151","messageId":"152","endLine":331,"endColumn":16},{"ruleId":"149","severity":1,"message":"204","line":339,"column":11,"nodeType":"151","messageId":"152","endLine":339,"endColumn":19},{"ruleId":"149","severity":1,"message":"196","line":340,"column":13,"nodeType":"151","messageId":"152","endLine":340,"endColumn":16},{"ruleId":"149","severity":1,"message":"205","line":90,"column":20,"nodeType":"151","messageId":"152","endLine":90,"endColumn":30},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'UserProvider' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'Hr' is assigned a value but never used.","'SignUpOptions' is assigned a value but never used.","'SignUpOptionsHeader' is assigned a value but never used.","'SignUpOptionsHeaderText' is assigned a value but never used.","'SignUpOptionsButtonCon' is assigned a value but never used.","'SignUpOptionsButton' is assigned a value but never used.","'SignUpOptionsIcon' is assigned a value but never used.","'ErrorMessage' is assigned a value but never used.","'ErrorMessageText' is assigned a value but never used.","'setError' is assigned a value but never used.","'minPass' is assigned a value but never used.","'allowLogin' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","'userSession' is assigned a value but never used.","'user' is assigned a value but never used.","'toast' is defined but never used.","'createContext' is defined but never used.","'ErrorCon' is assigned a value but never used.","'ErrorText' is assigned a value but never used.","'LabelCon' is assigned a value but never used.","'LabelSpan' is assigned a value but never used.","'LabelImage' is assigned a value but never used.","'InputLabel' is assigned a value but never used.","'InputFile' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["206"],"'ToastContainer' is defined but never used.","'HeaderBdText' is assigned a value but never used.","'ChangeEmailButton' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleEmailUpdate' and 'user'. Either include them or remove the dependency array.",["207"],"'handleSubmit' is assigned a value but never used.","'res' is assigned a value but never used.","'NavbarTextCon' is assigned a value but never used.","'ResetPassTextCon' is assigned a value but never used.","'ResetPassText' is assigned a value but never used.","'resetPass' is assigned a value but never used.","'setResetPass' is assigned a value but never used.","'Laptop' is defined but never used.","'handleUpdateRole' is assigned a value but never used.","'GetUsers' is assigned a value but never used.","'setNewPass' is assigned a value but never used.",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [dispatchUserEvent, user]",{"range":"212","text":"213"},"Update the dependencies array to be: [dispatchUserEvent, handleEmailUpdate, user]",{"range":"214","text":"215"},[4432,4451],"[dispatchUserEvent, user]",[2585,2604],"[dispatchUserEvent, handleEmailUpdate, user]"]